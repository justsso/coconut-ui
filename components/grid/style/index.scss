@import "../../style/themes/default";
@import "./mixin";

.#{$coconut-prefix}-row {
  width: 100%;
  overflow: hidden;

  &-flex {
    display: flex;
    flex-flow: row wrap;

    &::before, &::after {
      display: flex;
    }
  }
}

//主轴对齐
.#{$coconut-prefix}-row-flex-start {
  justify-content: flex-start;
}

.#{$coconut-prefix}-row-flex-center {
  justify-content: center;
}

.#{$coconut-prefix}-row-flex-end {
  justify-content: flex-end;
}

.#{$coconut-prefix}-row-flex-space-between {
  justify-content: space-between;
}

.#{$coconut-prefix}-row-flex-space-around {
  justify-content: space-around;
}

//纵轴对齐

.#{$coconut-prefix}-row-align-top {
  align-items: flex-start;
}

.#{$coconut-prefix}-row-align-center {
  align-items: center;
}

.#{$coconut-prefix}-row-align-bottom {
  align-items: flex-end;
}

//Col组件
$yellow: #f2bf43;
.#{$coconut-prefix}-col {
  float: left;
  box-sizing: border-box;
}

@for $i from 0 through 24 {
  //through 包括 0 和 24
  //循环生成span
  .#{$coconut-prefix}-col-span-#{$i} {
    width: (1/ 24 * $i *100) * 1%;
  }
  //循环生成offset
  .#{$coconut-prefix}-col-offset-#{$i} {
    margin-left: (1/24 * $i *100) * 1%;
  }
  //循环生成order
  .#{$coconut-prefix}-col-order-#{$i} {
    order: $i;
  }

  //  循环生成push

  //  循环生成pull
}

//响应式
@include res(xs) {
  .#{$coconut-prefix}-col-xs-0 {
    display: none;
  }
  @for $i from 0 through 24 {

    //span
    .#{$coconut-prefix}-col-xs-#{$i} {
      width: (1/ 24 * $i *100) * 1%;
    }
    //循环生成offset
    .#{$coconut-prefix}-col-xs-offset-#{$i} {
      margin-left: (1/24 * $i *100) * 1%;
    }
    //循环生成order
    .#{$coconut-prefix}-col-xs-order-#{$i} {
      order: $i;
    }
  }
}


@include res(sm) {
  .#{$coconut-prefix}-col-sm-0 {
    display: none;
  }
  @for $i from 0 through 24 {

    //span
    .#{$coconut-prefix}-col-sm-#{$i} {
      width: (1/ 24 * $i *100) * 1%;
    }
    //循环生成offset
    .#{$coconut-prefix}-col-sm-offset-#{$i} {
      margin-left: (1/24 * $i *100) * 1%;
    }
    //循环生成order
    .#{$coconut-prefix}-col-sm-order-#{$i} {
      order: $i;
    }
  }
}


@include res(md) {
  .#{$coconut-prefix}-col-md-0 {
    display: none;
  }
  @for $i from 0 through 24 {

    //span
    .#{$coconut-prefix}-col-md-#{$i} {
      width: (1/ 24 * $i *100) * 1%;
    }
    //循环生成offset
    .#{$coconut-prefix}-col-md-offset-#{$i} {
      margin-left: (1/24 * $i *100) * 1%;
    }
    //循环生成order
    .#{$coconut-prefix}-col-md-order-#{$i} {
      order: $i;
    }
  }
}

@include res(lg) {
  .#{$coconut-prefix}-col-lg-0 {
    display: none;
  }
  @for $i from 0 through 24 {

    //span
    .#{$coconut-prefix}-col-lg-#{$i} {
      width: (1/ 24 * $i *100) * 1%;
    }
    //循环生成offset
    .#{$coconut-prefix}-col-lg-offset-#{$i} {
      margin-left: (1/24 * $i *100) * 1%;
    }
    //循环生成order
    .#{$coconut-prefix}-col-lg-order-#{$i} {
      order: $i;
    }
  }
}

@include res(xl) {
  .#{$coconut-prefix}-col-xl-0 {
    display: none;
  }
  @for $i from 0 through 24 {

    //span
    .#{$coconut-prefix}-col-xl-#{$i} {
      width: (1/ 24 * $i *100) * 1%;
    }
    //循环生成offset
    .#{$coconut-prefix}-col-xl-offset-#{$i} {
      margin-left: (1/24 * $i *100) * 1%;
    }
    //循环生成order
    .#{$coconut-prefix}-col-xl-order-#{$i} {
      order: $i;
    }
  }
}

@include res(xxl) {
  .#{$coconut-prefix}-col-xxl-0 {
    display: none;
  }
  @for $i from 0 through 24 {

    //span
    .#{$coconut-prefix}-col-xxl-#{$i} {
      width: (1/ 24 * $i *100) * 1%;
    }
    //循环生成offset
    .#{$coconut-prefix}-col-xxl-offset-#{$i} {
      margin-left: (1/24 * $i *100) * 1%;
    }
    //循环生成order
    .#{$coconut-prefix}-col-xxl-order-#{$i} {
      order: $i;
    }
  }
}

